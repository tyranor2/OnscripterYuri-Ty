plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'org.jetbrains.kotlin.plugin.parcelize'
}

android {
    namespace 'com.yuri.onscripter'
    compileSdk 36
    ndkVersion '28.0.13004108'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "com.yuri.onscripter.ty"
        minSdk 21
        targetSdk 36
        packagingOptions {
            // doNotStrip '**.so' // important for debug so
        }
        ndk {
            abiFilters 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments "-Wno-dev",  "-DANDROID_ARM_NEON=TRUE"
            }
        }
        versionCode 7
        versionName '0.7.6-Ty'
    }
    signingConfigs {
        release {
            def signPropsFile = file('sign.properties')
            storeFile file('sign.jks')
            if (signPropsFile.exists()) {
                Properties signProps = new Properties()
                signProps.load(new FileInputStream(signPropsFile))
                keyAlias signProps['SIGN_KEY_ALIAS']
                keyPassword signProps['SIGN_KEY_PASS']
                storePassword signProps['SIGN_STORE_PASS']
            }
            else {
                keyAlias System.getenv("SIGN_KEY_ALIAS")
                keyPassword System.getenv("SIGN_KEY_PASS")
                storePassword System.getenv("SIGN_STORE_PASS")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true // this may cause jni crash
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if(file('sign.properties').exists() || System.getenv("SIGN_KEY_ALIAS")) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            minifyEnabled false
            debuggable true
            if(file('sign.properties').exists() || System.getenv("SIGN_KEY_ALIAS")) {
                signingConfig signingConfigs.release
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['java']
            res.srcDirs = ['res']
            jniLibs.srcDirs = ['jniLibs']
        }
    }
    /*externalNativeBuild {
        cmake {
            version '3.22.1'
            path 'cpp/CMakeLists.txt'
            // this might be some problem with ninja
            // buildStagingDirectory './../../../build_android'
        }
    }*/
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "onsyuri[${namespace}]_v${defaultConfig.versionName}.apk"
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    buildFeatures {
        viewBinding true
        compose true
        buildConfig true
        prefab true
    }
}

dependencies {
    /** core **/
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.documentfile:documentfile:1.1.0-alpha01'

    /** compose **/
    implementation platform('androidx.compose:compose-bom:2024.10.01')
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.activity:activity-compose:1.9.3'

    /** video **/
    implementation "androidx.media3:media3-exoplayer:1.8.0"
    implementation "androidx.media3:media3-ui:1.8.0"
    implementation "androidx.media3:media3-common:1.8.0"
}